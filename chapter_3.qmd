---
title: "כלל הסנדוויץ' - דוגמה מספרית"
---

## הדגמה: כלל הסנדוויץ' עם סדרות קבועות

```{=html}
<style>
  #sequence-squeeze-demo-fixed {
    font-family: sans-serif;
    border: 1px solid #ccc;
    padding: 20px;
    border-radius: 8px;
    max-width: 700px;
    margin: auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    background-color: white;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
  }
  #sequenceCanvasFixed { border: 1px solid black; }
  .sequence-controls-fixed { width: 100%; margin-top: 15px; }
  .sequence-controls-fixed label { display: block; margin-bottom: 5px; margin-top: 10px; }
  .sequence-controls-fixed input[type="range"] { width: 100%; }
  .legend-fixed { width: 100%; padding: 10px 0; }
  .legend-item-fixed { display: inline-block; margin-right: 20px; font-size: 0.9em; }
  .legend-color-fixed { display: inline-block; width: 15px; height: 15px; border-radius: 50%; margin-left: 5px; vertical-align: middle; }
</style>

<div id="sequence-squeeze-demo-fixed">
  <h2>הדגמה: כלל הסנדוויץ' עם סדרות קבועות</h2>
  <canvas id="sequenceCanvasFixed" width="650" height="400"></canvas>
  
  <div class="legend-fixed">
      <div class="legend-item-fixed">סדרה עליונה (h<sub>n</sub>) <span class="legend-color-fixed" style="background-color: blue;"></span></div>
      <div class="legend-item-fixed">סדרה תחתונה (f<sub>n</sub>) <span class="legend-color-fixed" style="background-color: green;"></span></div>
      <div class="legend-item-fixed">סדרה לכודה (g<sub>n</sub>) <span class="legend-color-fixed" style="background-color: red;"></span></div>
  </div>

  <div class="sequence-controls-fixed">
    <!-- המחוונים של הפרמטרים הוסרו, נשארנו רק עם N -->
    <label for="n_slider_fixed">מספר איברים (N): <span id="n_value_fixed">50</span></label>
    <input type="range" id="n_slider_fixed" min="5" max="150" value="5" step="1">
  </div>
</div>

<script>
  // פרמטרים קבועים
  const L_fixed = 1;
  const C_h_fixed = 2;
  const C_f_fixed = 1.5;

  const canvas_fixed = document.getElementById('sequenceCanvasFixed');
  const ctx_fixed = canvas_fixed.getContext('2d');
  const slider_n_fixed = document.getElementById('n_slider_fixed');
  const value_n_fixed = document.getElementById('n_value_fixed');
  
  const originY_fixed = canvas_fixed.height / 2;
  const scaleY_fixed = 50; 
  const margin_fixed = 40; 

  function draw_fixed() {
    const N = parseInt(slider_n_fixed.value);
    value_n_fixed.textContent = N;
    
    const scaleX = (canvas_fixed.width - margin_fixed * 1.5) / N;
    
    ctx_fixed.clearRect(0, 0, canvas_fixed.width, canvas_fixed.height);
    drawAxes_fixed(N, scaleX);

    // הגדרת הסדרות עם מספרים קבועים
    const h_n = (n) => L_fixed + C_h_fixed / n;
    const f_n = (n) => L_fixed - C_f_fixed / n;
    const g_n = (n) => (h_n(n) + f_n(n)) / 2 + ((h_n(n) - f_n(n)) / 2) * Math.sin(n * 2.5);

    for (let i = 1; i <= N; i++) {
      drawPoint_fixed(i, h_n(i), 'blue', scaleX);
      drawPoint_fixed(i, f_n(i), 'green', scaleX);
      drawPoint_fixed(i, g_n(i), 'red', scaleX);
    }
  }

  function drawAxes_fixed(N, scaleX) {
    ctx_fixed.font = "12px Arial"; ctx_fixed.fillStyle = "black"; ctx_fixed.textAlign = "center";
    ctx_fixed.beginPath(); ctx_fixed.strokeStyle = 'black'; ctx_fixed.lineWidth = 1.5;
    ctx_fixed.moveTo(margin_fixed, originY_fixed); ctx_fixed.lineTo(canvas_fixed.width, originY_fixed);
    ctx_fixed.moveTo(margin_fixed, 0); ctx_fixed.lineTo(margin_fixed, canvas_fixed.height);
    ctx_fixed.stroke();
    ctx_fixed.textAlign = "right";
    for (let i = -2; i <= 4; i++) {
        if (i === 0) continue;
        const y = originY_fixed - i * (scaleY_fixed/2); // קנה מידה עדין יותר לציר Y
        ctx_fixed.beginPath(); ctx_fixed.moveTo(margin_fixed - 5, y); ctx_fixed.lineTo(margin_fixed + 5, y); ctx_fixed.stroke();
        ctx_fixed.fillText((i/2).toFixed(1), margin_fixed - 10, y + 4);
    }
    ctx_fixed.textAlign = "center";
    const tickStep = (N < 20) ? 2 : Math.max(5, Math.ceil(N / 10 / 5) * 5); //
    for (let n = tickStep; n <= N; n += tickStep) {
        const x = margin_fixed + n * scaleX;
        ctx_fixed.beginPath(); ctx_fixed.moveTo(x, originY_fixed - 5); ctx_fixed.lineTo(x, originY_fixed + 5); ctx_fixed.stroke();
        ctx_fixed.fillText(n, x, originY_fixed + 20);
    }
  }

  function drawPoint_fixed(n, value, color, scaleX) {
    const canvasX = margin_fixed + n * scaleX;
    const canvasY = originY_fixed - value * scaleY_fixed;
    ctx_fixed.beginPath(); ctx_fixed.arc(canvasX, canvasY, 3.5, 0, 2 * Math.PI);
    ctx_fixed.fillStyle = color;
    ctx_fixed.fill();
  }

  slider_n_fixed.addEventListener('input', draw_fixed);
  draw_fixed();
</script>
```

::: {.callout-note icon="lightbulb"}
## חקירה אינטראקטיבית: דוגמה מספרית

בדוגמה זו אנו בוחנים מקרה ספציפי של כלל הסנדוויץ' עם סדרות שהוגדרו מראש. האינטראקטיביות היחידה היא היכולת לשנות את מספר האיברים (`N`) המוצגים, כדי לראות את תהליך ההתכנסות מתרחש.

::: {.panel-tabset}

### הסדרות בדמו

הסדרות הקבועות המוצגות כאן הן:

*   **הסדרה העליונה (כחול):** $h_n = 1 + \frac{2}{n}$
    <br>סדרה זו מתכנסת לגבול 1 מלמעלה.

*   **הסדרה התחתונה (ירוק):** $f_n = 1 - \frac{1.5}{n}$
    <br>סדרה זו מתכנסת לגבול 1 מלמטה.

*   **הסדרה הלכודה (אדום):** $g_n = 1+ \frac{0.25}{n} + \frac{3.5}{2n} \sin(2.5n)$
    <br>זוהי סדרה מתנודדת אשר נשארת תמיד כלואה בין שתי הסדרות החיצוניות.

כל שלוש הסדרות שואפות לאותו הגבול, `L = 1`.

### נסו לחקור בעצמכם

1.  **התחילו עם ערך `N` קטן**, למשל 15. שימו לב שהסדרות עדיין רחוקות זו מזו, והמרחק בינן לבין קו הגבול (y=1) גדול יחסית.
2.  **הזיזו את המחוון של `N` ימינה לאט.**
3.  **צפו בתופעה:** ככל ש-`N` גדל, הנקודות החדשות שנוספות לכל סדרה מתקרבות יותר ויותר לקו הגבול `y=1`. אפקט ה"סחיטה" של הסנדוויץ' הופך ברור יותר ויותר ככל שמתקדמים על ציר ה-`n`.

הדגמה זו ממחישה כיצד ההתכנסות היא תכונה של "זנב" הסדרה, כלומר מה שקורה עבור ערכי `n` גדולים מאוד.

:::
:::